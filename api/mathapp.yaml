openapi: '3.0.0'
info:
  version: "0.1.0"
  title: 'MathApp.API'
  description: 'This is the backend API for the ASU STEM Academy Math APP Project'
servers:
  - url: /api/v1
paths:
  /students:
    get:
      description: Returns a list of students
      operationId: students.get_all
      responses:
        '200':
          description: Student List
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: '#/components/schemas/student'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
    post:
      description: Creates a new student record
      operationId: students.add_student
      requestBody:
        description: Student to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_student'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Record Locator
        '400':
          $ref: '#/components/responses/400Error'
  /students/{student_id}:
    get:
      description: Get student by student ID number
      operationId: students.get_student
      parameters:
        - name: student_id
          description: Student ID to lookkup
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Student Record
          content:
            application/json:
              schema:
                properties:
                  student:
                    type: object
                    $ref: '#/components/schemas/student'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /students/{student_id}/tests:
    get:
      description: Get active tests for a student
      operationId: students.get_tests
      parameters:
        - name: student_id
          description: Student ID to lookup
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Tests available to student identified by student_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  tests:
                    type: array
                    items:
                      $ref: '#/components/schemas/test'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
    post:
      description: Assign a test to a student
      operationId: students.add_test
      parameters:
        - name: student_id
          description: Student ID to add test to
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        description: Test to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_test'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Record Locator
        '400':
          $ref: '#/components/responses/400Error'
  /teachers:
    get:
      description: Returns a list of teachers
      operationId: teachers.get_all
      responses:
        '200':
          description: Teacher List
          content:
            application/json:
              schema:
                type: object
                properties:
                  teachers:
                    type: array
                    items:
                      $ref: '#/components/schemas/teacher'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
    post:
      description: Creates a new Teacher record
      operationId: teachers.add_teacher
      requestBody:
        description: Teacher to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_teacher'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Record Locator
        '400':
          $ref: '#/components/responses/400Error'
  /teachers/{teacher_id}:
    get:
      description: Get teacher by teacher ID number
      operationId: teachers.get_teacher
      parameters:
        - name: teacher_id
          description: Teacher ID to lookup
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Teacher Record
          content:
            application/json:
              schema:
                properties:
                  teacher:
                    type: object
                    $ref: '#/components/schemas/teacher'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /teachers/{teacher_id}/class:
    get:
      description: Get students assigned to teacher
      operationId: teachers.get_class
      parameters:
        - name: teacher_id
          description: Teacher ID to lookup
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Student Records
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items: 
                      $ref: '#/components/schemas/student'
        '400':
          $ref: '#/components/responses/400Error'
  /tests/{test_id}:
    get:
      description: Get details for a specific test
      operationId: tests.get_test
      parameters:
        - name: test_id
          description: Record Identifier for a specific test
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Test Record
          content:
            application/json:
              schema:
                properties:
                  test:
                    type: object
                    $ref: '#/components/schemas/test'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
    patch:
      description: Update test details
      operationId: tests.modify_test
      parameters:
        - name: test_id
          description: Record Identifier for test to be updated
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_test'
      responses:
        '204':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
              description: Record Locator
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /results/students/{student_id}:
    get:
      description: Get results for all tests by the specified student
      operationId: results.get_by_student
      parameters:
        - name: student_id
          description: Student ID to lookup
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Aggregate Results
          content:
            application/json:
              schema:
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/result'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
    post:
      description: Submit test results for a student
      operationId: results.add_result
      parameters:
        - name: student_id
          description: Student ID to lookup
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        description: Submitted test results
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/new_result'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Record Locator
        '400':
          $ref: '#/components/responses/400Error'
  /results/tests/{test_id}:
    get:
      description: Get results for a specific test by the test ID
      operationId: results.get_by_test_id
      parameters:
        - name: test_id
          description: Test tracking ID number to look up the results for
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Aggregate Results
          content:
            application/json:
              schema:
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/result'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /results/{result_id}:
    get:
      description: Get result by result tracking ID
      operationId: results.get_by_result_id
      parameters:
        - name: result_id
          description: Result tracking ID number to look up
          in: path
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: Aggregate Results
          content:
            application/json:
              schema:
                properties:
                  results:
                    type: object
                    $ref: '#/components/schemas/result'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
# Reusable Definitions     
components:
  schemas:
    student:
      type: object
      properties:
        id:
          type: integer
          description: Student ID
        student_name:
          type: string
          description: Student's Name
        teacher_id:
          type: string
          description: Student's Teacher
        stars:
          type: integer
          description: Stars student has earned
        level:
          type: integer
          description: Level of student
    teacher:
      type: object
      properties:
        teacher_id:
          type: integer
          description: ID number for teacher
        teacher_name:
          type: string
          description: Teacher's Name
    test:
      type: object
      properties:
        test_id:
          type: integer
          description: ID number for test
        test_description:
          type: string
          description: Description of test
        operator:
          type: string
          description: Operator test uses
        base_number:
          type: integer
          description: Base number of the test
        practice:
          type: boolean
          description: Is it a practice test?
        tries:
          type: integer
          description: Number of times available, -1 for always available
        number_questions:
          type: integer
          description: Number of questions to ask
    result:
      type: object
      properties:
        result_id:
          type: integer
          description: Tracking number for test submission
        test_id:
          type: integer
          description: Test ID of test this submission is for
        student_id:
          type: integer
          description: Student ID of the student who submitted the test
        operator:
          type: string
          description: Mathematical Operator
          pattern: '[\+\-\/\*]'
        number_correct:
          type: integer
          description: Number of questions answered correctly
        number_incorrect:
          type: integer
          description: Number of questions answerred incorrectly
        number_questions:
          type: integer
          description: Number of questions in the test
        base_number:
          type: integer
          description: Base number for submitted test
        practice_test:
          type: boolean
          description: Was the test a practice test?
        questions:
          type: array
          items:
            properties:
              number:
                type: integer
                description: 2nd Number
              answer:
                type: integer
                description: Answer student submitted
    new_result:
      type: object
      properties:
        test_id:
          type: integer
          description: Tracking number for test
        student_id:
          type: integer
          description: Student ID of the student who's results these are
        questions:
          type: array
          items:
            properties:
              number:
                type: integer
                description: 2nd Number
              answer:
                type: integer
                description: Answer the student submitted
    error:
      type: object
      properties:
        message:
          type: string
          description: Error Message from server
    new_student:
      type: object
      properties:
        student_firstname:
          type: string
          description: Student's First Name
        student_lastname:
          type: string
          description: Student's Last Name
        teacher_id:
          type: integer
          description: ID for Student's Teacher
          default: 0
      required:
        - student_firstname
        - student_lastname
        - teacher_id
    new_teacher:
      type: object
      properties:
        teacher_firstname:
          type: string
          description: Teacher's First Name
        teacher_lastname:
          type: string
          description: Teacher's Last Name
    new_test:
      description: Create a new test for students to take
      type: object
      properties:
        test_description:
          type: string
          description: Description of the Test
        operator:
          type: string
          description: Operator for the test either +, -, *, /
          pattern: '[\+\-\/\*]'
        base_number:
          type: integer
          description: Base number of the test
        practice:
          type: boolean
          description: Is it a practice test?
          default: true
        tries:
          type: integer
          description: Number of times available, -1 for always available
          default: 1
    update_test:
      description: Update test details
      type: object
      properties:
        tries:
          type: integer
          description: Number of tries remaining
  responses:
    400Error:
      description: Invalid Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    404Error:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'